# Creates the blank keys needed to merge the values below together.
{{- define "octopus-deploy.octopus-base-keys" -}}
controllers:
  octopus:
    pod: {}
    containers:
      main:
        image: {}
        resources: {}
        probes: {}
service:
  octopus: {}
ingress:
  main: {}
{{- end }}
{{- $_ := mergeOverwrite .Values (include "octopus-deploy.octopus-base-keys" . | fromYaml) -}}

# Merge in values from specific config sections
{{- $_ := mergeOverwrite .Values.controllers.octopus.containers.main.image .Values.octopus.image -}}
{{- $_ := mergeOverwrite .Values.controllers.octopus .Values.octopus.statefulset -}}
{{- $_ := mergeOverwrite .Values.controllers.octopus.pod .Values.octopus.podOverrides -}}
{{- $_ := mergeOverwrite .Values.controllers.octopus.containers.main.resources .Values.octopus.resources -}}
{{- define "octopus-deploy.volumeClaimTemplates" -}}
{{- if .Values.octopus.storage.individual.enabled }}
controllers:
  octopus:
    statefulset:
      volumeClaimTemplates:
        - name: individual
          globalMounts:
            - path: /import
              subPath: import
            - path: /cache
              subPath: cache
            - path: /home/octopus/.octopus/OctopusServer/Server/Logs
              subPath: server-logs
          accessMode: "{{ .Values.octopus.storage.individual.accessMode }}"
          size: "{{ .Values.octopus.storage.individual.size }}"
          storageClass: "{{ .Values.octopus.storage.individual.storageClass }}"
          retain: "{{ .Values.octopus.storage.individual.retain }}"
{{ end }}
{{- end }}
{{- $_ := mergeOverwrite .Values (include "octopus-deploy.volumeClaimTemplates" . | fromYaml) -}}
{{- $_ := mergeOverwrite .Values.service.octopus .Values.octopus.service -}}
{{- $_ := mergeOverwrite .Values.controllers.octopus.containers.main.probes .Values.octopus.probes -}}
{{- $_ := mergeOverwrite .Values.ingress.main .Values.octopus.ingress -}}

{{- define "octopus-deploy.octopus-hardcoded" -}}
controllers:
  octopus:
    type: statefulset
    pod:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ .Release.Name }}
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - octopus
              topologyKey: kubernetes.io/hostname
    containers:
      main:
        image:
          tag: {{ .Values.octopus.image.tag | default .Chart.AppVersion }}
        env:
          - name: ACCEPT_EULA
            value: {{ if .Values.settings.acceptEula }}"Y"{{ else }}"N"{{ end }}
          - name: OCTOPUS_SERVER_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DB_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: DB_CONNECTION_STRING
          - name: ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: ADMIN_USERNAME
          - name: ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: ADMIN_PASSWORD
          - name: ADMIN_EMAIL
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: ADMIN_EMAIL
          {{- if .Values.settings.licenseKey }}
          - name: OCTOPUS_SERVER_BASE64_LICENSE
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: OCTOPUS_SERVER_BASE64_LICENSE
          {{- end }}
          - name: MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: {{ default .Values.settings.existingSecret (printf "%s-config" .Release.Name) }}
                key: MASTER_KEY
          {{- if not .Values.settings.enableDockerInDocker }}
          - name: DISABLE_DIND
            value: "Y"
          {{- end }}
          - name: OCTOPUS_INSTALLED_VIA_HELM
            value: "true"
        probes:
          liveness:
            custom: true
            spec:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - URL=http://localhost:8080; response=$(/usr/bin/curl -k $URL/api/octopusservernodes/ping --write-out %{http_code} --silent --output /dev/null); /usr/bin/test "$response" -ge 200 && /usr/bin/test "$response" -le 299 || /usr/bin/test "$response" -eq 418
          readiness:
            custom: true
            spec:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - URL=http://localhost:8080; response=$(/usr/bin/curl -k $URL/api/serverstatus/hosted/internal --write-out %{http_code} --silent --output /dev/null); /usr/bin/test "$response" -ge 200 && /usr/bin/test "$response" -le 299 || /usr/bin/test
          startup:
            custom: true
            spec:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - URL=http://localhost:8080; response=$(/usr/bin/curl -k $URL/api/octopusservernodes/ping --write-out %{http_code} --silent --output /dev/null); /usr/bin/test "$response" -ge 200 && /usr/bin/test "$response" -le 299 || /usr/bin/test "$response" -eq 418
        {{- if .Values.settings.enableDockerInDocker }}
        securityContext:
          privileged: true
        {{- end }}
        {{- if gt (int .Values.octopus.statefulset.replicas) 1 }} 
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - '[[ -f /Octopus/Octopus.Server ]] && EXE="/Octopus/Octopus.Server" || EXE="dotnet /Octopus/Octopus.Server.dll"; $EXE node --instance=OctopusServer --drain=true --wait=600 --cancel-tasks;'
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - 'URL=http://localhost:8080; x=0; while [ $x -lt 9 ]; do response=$(/usr/bin/curl -k $URL/api/octopusservernodes/ping --write-out %{http_code} --silent --output /dev/null); if [ "$response" -ge 200 ] && [ "$response" -le 299 ]; then break; fi; if [ "$response" -eq 418 ]; then [[ -f /Octopus/Octopus.Server ]] && EXE="/Octopus/Octopus.Server" || EXE="dotnet /Octopus/Octopus.Server.dll"; $EXE node --instance=OctopusServer --drain=false; now=$(date); echo "${now} Server cancelling drain mode." break; fi; now=$(date); echo "${now} Server is not ready, can not disable drain mode."; sleep 30; done;'
        {{- end }}
service:
  octopus:
    controller: octopus
    primary: true
    nameOverride: "octopus"
    ports:
      http:
        primary: true
        targetPort: 8080
        protocol: HTTP
      polling:
        primary: false
        targetPort: 10943
        protocol: TCP

persistence:
  shared:
    enabled: {{ .Values.octopus.storage.shared.enabled }}
    storageClass: {{ .Values.octopus.storage.shared.storageClass }}
    existingClaim: {{ .Values.octopus.storage.shared.existingClaim | default "" }}
    accessMode: {{ .Values.octopus.storage.shared.accessMode }}
    size: {{ .Values.octopus.storage.shared.size }}
    retain: {{ .Values.octopus.storage.shared.retain }}
    advancedMounts:
      octopus:
        main:
          - path: /repository
            subPath: repository
          - path: /artifacts
            subPath: artifacts
          - path: /taskLogs
            subPath: taskLogs
          - path: /eventExports
            subPath: eventExports
ingress:
  main:
    primary: true
    hosts:
      - host: {{ .Values.octopus.ingress.hostname }}
        paths:
          - path: /
            pathType: Prefix
            service:
              name: octopus
              port: http
{{- end -}}
{{- $_ := mergeOverwrite .Values (include "octopus-deploy.octopus-hardcoded" . | fromYaml) -}}